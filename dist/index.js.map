{"mappings":"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","sources":["node_modules/.pnpm/sb-event-kit@3.1.0/node_modules/sb-event-kit/lib/composite-disposable.js","node_modules/.pnpm/sb-event-kit@3.1.0/node_modules/sb-event-kit/lib/main.js","lib/validate.ts","lib/helpers.ts","node_modules/.pnpm/solid-js@0.26.5/node_modules/solid-js/dist/solid.js","node_modules/.pnpm/solid-js@0.26.5/node_modules/solid-js/web/dist/web.js","lib/elements/list.tsx","lib/index.ts","node_modules/.pnpm/sb-event-kit@3.1.0/node_modules/sb-event-kit/lib/emitter.js","node_modules/.pnpm/sb-event-kit@3.1.0/node_modules/sb-event-kit/lib/disposable.js","node_modules/.pnpm/sb-event-kit@3.1.0/node_modules/sb-event-kit/lib/helpers.js","node_modules/.pnpm/disposable-event@2.0.0/node_modules/disposable-event/lib/index.js","lib/commands.ts","lib/view-list.tsx","lib/providers-list.ts","lib/providers-highlight.ts","lib/main.ts"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _helpers = require('./helpers');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CompositeDisposable = function () {\n  function CompositeDisposable() {\n    _classCallCheck(this, CompositeDisposable);\n\n    for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n\n    (0, _helpers.validate)(params);\n\n    this.disposed = false;\n    this.disposables = new Set(params);\n  }\n\n  _createClass(CompositeDisposable, [{\n    key: 'add',\n    value: function add() {\n      if (this.disposed) {\n        return;\n      }\n\n      for (var _len2 = arguments.length, params = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        params[_key2] = arguments[_key2];\n      }\n\n      (0, _helpers.validate)(params);\n      for (var i = 0, length = params.length; i < length; ++i) {\n        this.disposables.add(params[i]);\n      }\n    }\n  }, {\n    key: 'delete',\n    value: function _delete() {\n      if (this.disposed) {\n        return;\n      }\n\n      for (var _len3 = arguments.length, params = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        params[_key3] = arguments[_key3];\n      }\n\n      for (var i = 0, length = params.length; i < length; ++i) {\n        this.disposables.delete(params[i]);\n      }\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      if (this.disposed) {\n        return;\n      }\n      this.disposables.clear();\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.disposed) {\n        return;\n      }\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.disposables[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (typeof item.dispose === 'function') {\n            item.dispose();\n          } else if (typeof item === 'function') {\n            item();\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.disposed = true;\n      this.disposables.clear();\n    }\n  }]);\n\n  return CompositeDisposable;\n}();\n\nexports.default = CompositeDisposable;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompositeDisposable = exports.Disposable = exports.Emitter = undefined;\n\nvar _emitter = require('./emitter');\n\nvar _emitter2 = _interopRequireDefault(_emitter);\n\nvar _disposable = require('./disposable');\n\nvar _disposable2 = _interopRequireDefault(_disposable);\n\nvar _compositeDisposable = require('./composite-disposable');\n\nvar _compositeDisposable2 = _interopRequireDefault(_compositeDisposable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Emitter = _emitter2.default;\nexports.Disposable = _disposable2.default;\nexports.CompositeDisposable = _compositeDisposable2.default;\nexports.default = {\n  Emitter: _emitter2.default,\n  Disposable: _disposable2.default,\n  CompositeDisposable: _compositeDisposable2.default\n};","import type { ListProvider, ListItem, HighlightProvider, HighlightItem } from \"./types\";\nexport function provider(entry: ListProvider | HighlightProvider) {\n  let message;\n\n  if (typeof entry !== \"object\") {\n    message = \"Invalid provider provided\";\n  } else if (!Array.isArray(entry.grammarScopes)) {\n    message = \"Invalid or no grammarScopes found on provider\";\n  } else if (typeof entry.getIntentions !== \"function\") {\n    message = \"Invalid or no getIntentions found on provider\";\n  }\n\n  if (message !== undefined) {\n    console.log(\"[Intentions] Invalid provider\", entry);\n    throw new Error(message);\n  }\n}\nexport function suggestionsList(suggestions: Array<ListItem>): Array<ListItem> {\n  if (Array.isArray(suggestions)) {\n    const suggestionsLength = suggestions.length;\n\n    for (let i = 0; i < suggestionsLength; ++i) {\n      const suggestion = suggestions[i];\n      let message;\n\n      if (typeof suggestion.title !== \"string\") {\n        message = \"Invalid or no title found on intention\";\n      } else if (typeof suggestion.selected !== \"function\") {\n        message = \"Invalid or no selected found on intention\";\n      }\n\n      if (message !== undefined) {\n        console.log(\"[Intentions] Invalid suggestion of type list\", suggestion);\n        throw new Error(message);\n      }\n    }\n  }\n\n  return suggestions;\n}\nexport function suggestionsShow(suggestions: Array<HighlightItem>): Array<HighlightItem> {\n  if (Array.isArray(suggestions)) {\n    const suggestionsLength = suggestions.length;\n\n    for (let i = 0; i < suggestionsLength; ++i) {\n      const suggestion = suggestions[i];\n      let message;\n\n      if (typeof suggestion.range !== \"object\") {\n        message = \"Invalid or no range found on intention\";\n      } else if (typeof suggestion.created !== \"function\") {\n        message = \"Invalid or no created found on intention\";\n      }\n\n      if (message !== undefined) {\n        console.log(\"[Intentions] Invalid suggestion of type show\", suggestion);\n        throw new Error(message);\n      }\n    }\n  }\n\n  return suggestions;\n}","import * as ValidateSuggestions from \"./validate\";\nimport type { Point, Range, TextEditor } from \"atom\";\nimport type { ListProvider, ListItem, HighlightProvider } from \"./types\";\nexport const $class = \"__$sb_intentions_class\";\nexport function scopesForBufferPosition(textEditor: TextEditor, bufferPosition: Point) {\n  return [...textEditor.scopeDescriptorForBufferPosition(bufferPosition).getScopesArray(), \"*\"];\n}\nexport async function getIntentionsForBufferPosition(provider: ListProvider, bufferPosition: Point, textEditor: TextEditor, scopes: string[]) {\n  const providerScopes = provider.grammarScopes;\n\n  if (hasOverlap(scopes, providerScopes)) {\n    const results = await provider.getIntentions({\n      textEditor,\n      bufferPosition\n    });\n\n    if (atom.inSpecMode()) {\n      ValidateSuggestions.suggestionsList(results);\n    }\n\n    return results;\n  }\n\n  return [];\n}\nexport async function getIntentionsForVisibleRange(provider: HighlightProvider, visibleRange: Range, textEditor: TextEditor, scopes: string[]) {\n  const providerScopes = provider.grammarScopes;\n\n  if (hasOverlap(scopes, providerScopes)) {\n    const results = await provider.getIntentions({\n      textEditor,\n      visibleRange\n    });\n\n    if (atom.inSpecMode()) {\n      ValidateSuggestions.suggestionsShow(results);\n    }\n\n    return results;\n  }\n\n  return [];\n}\nexport function processListItems(suggestions: Array<ListItem>): Array<ListItem> {\n  for (let i = 0, {\n    length\n  } = suggestions; i < length; ++i) {\n    const suggestion = suggestions[i];\n    const className: string[] = [];\n\n    if (suggestion.class !== undefined && suggestion.class !== \"\") {\n      className.push(suggestion.class.trim());\n    }\n\n    if (suggestion.icon !== undefined && suggestion.icon !== \"\") {\n      className.push(`icon icon-${suggestion.icon}`);\n    }\n\n    suggestion[$class] = className.join(\" \");\n  }\n\n  return suggestions.sort(function (a, b) {\n    return b.priority - a.priority;\n  });\n}\nexport function showError(message: Error | string, detail?: string) {\n  let detailShown: string | undefined;\n  let messageShown: string;\n\n  if (message instanceof Error) {\n    detailShown = message.stack ?? \"\";\n    messageShown = message.message;\n  } else {\n    detailShown = detail;\n    messageShown = message;\n  }\n\n  atom.notifications.addError(`[Intentions] ${messageShown}`, {\n    detail: detailShown,\n    dismissable: true\n  });\n}\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n\nexport function flatObjectArray<T = any>(resultsArray: T[][]) {\n  return resultsArray.flat() // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  .filter(result => result !== null && typeof result === \"object\") // TODO is this really needed?\n  ;\n}\n\nfunction hasOverlap<T>(arr1: T[], arr2: T[]) {\n  return arr1.some(elm => arr2.includes(elm));\n}","let taskIdCounter = 1,\n    isCallbackScheduled = false,\n    isPerformingWork = false,\n    taskQueue = [],\n    currentTask = null,\n    shouldYieldToHost = null,\n    yieldInterval = 5,\n    deadline = 0,\n    maxYieldInterval = 300,\n    scheduleCallback = null,\n    scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n        port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      let k = n + m >> 1;\n      let cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n      timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return { ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}.`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nlet ERROR = null;\nlet runEffects = runQueue;\nconst NOTPENDING = {};\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst [transPending, setTransPending] = createSignal(false);\nvar Owner = null;\nvar Listener = null;\nlet Pending = null;\nlet Updates = null;\nlet Effects = null;\nlet Transition = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  detachedOwner && (Owner = detachedOwner);\n  const listener = Listener,\n        owner = Owner,\n        root = fn.length === 0 && !false ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner,\n    attached: !!detachedOwner\n  };\n  Owner = root;\n  Listener = null;\n  let result;\n  try {\n    runUpdates(() => result = fn(() => cleanNode(root)), true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n  return result;\n}\nfunction createSignal(value, areEqual = true, options) {\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    pending: NOTPENDING,\n    comparator: areEqual ? typeof areEqual === \"function\" ? areEqual : equalFn : undefined\n  };\n  return [readSignal.bind(s), writeSignal.bind(s)];\n}\nfunction createComputed(fn, value) {\n  updateComputation(createComputation(fn, value, true));\n}\nfunction createRenderEffect(fn, value) {\n  updateComputation(createComputation(fn, value, false));\n}\nfunction createEffect(fn, value) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects && Effects.push(c);\n}\nfunction resumeEffects(e) {\n  Transition && (Transition.running = true);\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createMemo(fn, value, areEqual = true) {\n  const c = createComputation(fn, value, true);\n  c.pending = NOTPENDING;\n  c.observers = null;\n  c.observerSlots = null;\n  c.state = 0;\n  c.comparator = areEqual ? typeof areEqual === \"function\" ? areEqual : equalFn : undefined;\n  updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createDeferred(source, options) {\n  let t,\n      timeout = options ? options.timeoutMs : undefined;\n  const [deferred, setDeferred] = createSignal();\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  updateComputation(node);\n  setDeferred(node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn) {\n  let subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const key of subs.keys()) if (fn(key, v) || p !== undefined && fn(key, p)) {\n      const l = subs.get(key);\n      for (const c of l.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true);\n  updateComputation(node);\n  return key => {\n    let listener;\n    if (listener = Listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.size > 1 ? l.delete(listener) : subs.delete(key);\n      });\n    }\n    return fn(key, node.value);\n  };\n}\nfunction batch(fn) {\n  if (Pending) return fn();\n  const q = Pending = [],\n        result = fn();\n  Pending = null;\n  runUpdates(() => {\n    for (let i = 0; i < q.length; i += 1) {\n      const data = q[i];\n      if (data.pending !== NOTPENDING) {\n        const pending = data.pending;\n        data.pending = NOTPENDING;\n        writeSignal.call(data, pending);\n      }\n    }\n  }, false);\n  return result;\n}\nfunction useTransition() {\n  return [transPending, (fn, cb) => {\n    if (SuspenseContext) {\n      Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        running: true,\n        cb: []\n      });\n      cb && Transition.cb.push(cb);\n      Transition.running = true;\n    }\n    batch(fn);\n    if (!SuspenseContext && cb) cb();\n  }];\n}\nfunction untrack(fn) {\n  let result,\n      listener = Listener;\n  Listener = null;\n  result = fn();\n  Listener = listener;\n  return result;\n}\nfunction on(...args) {\n  const fn = args.pop();\n  let deps;\n  let isArray = true;\n  let prev;\n  if (args.length < 2) {\n    deps = args[0];\n    isArray = false;\n  } else deps = args;\n  return prevResult => {\n    let value;\n    if (isArray) {\n      value = [];\n      if (!prev) prev = [];\n      for (let i = 0; i < deps.length; i++) value.push(deps[i]());\n    } else value = deps();\n    const result = untrack(() => fn(value, prev, prevResult));\n    prev = value;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  Owner = o;\n  try {\n    return fn();\n  } finally {\n    Owner = prev;\n  }\n}\nfunction createContext(defaultValue) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  return lookup(Owner, context.id) || context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  return createMemo(() => resolveChildren(children()));\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction createResource(fn, fetcher, options = {}) {\n  if (arguments.length === 2) {\n    if (typeof fetcher === \"object\") {\n      options = fetcher;\n      fetcher = fn;\n      fn = true;\n    }\n  } else if (arguments.length === 1) {\n    fetcher = fn;\n    fn = true;\n  }\n  const contexts = new Set(),\n        [s, set] = createSignal(options.initialValue),\n        [track, trigger] = createSignal(undefined, false),\n        [loading, setLoading] = createSignal(false),\n        [error, setError] = createSignal();\n  let err = undefined,\n      pr = null,\n      initP = null,\n      id = null,\n      loadedUnderTransition = false,\n      dynamic = typeof fn === \"function\";\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    if (sharedConfig.context.loadResource) {\n      initP = sharedConfig.context.loadResource(id);\n    } else if (sharedConfig.resources && id && id in sharedConfig.resources) {\n      initP = sharedConfig.resources[id];\n      delete sharedConfig.resources[id];\n    }\n  }\n  function loadEnd(p, v, e) {\n    if (pr === p) {\n      setError(err = e);\n      pr = null;\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          if (!Transition.promises.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n          completeLoad(v);\n        }, false);\n      } else completeLoad(v);\n    }\n    return v;\n  }\n  function completeLoad(v) {\n    batch(() => {\n      set(v);\n      setLoading(false);\n      for (let c of contexts.keys()) c.decrement();\n      contexts.clear();\n    });\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n          v = s();\n    if (err) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load() {\n    setError(err = undefined);\n    let lookup = dynamic ? fn() : fn;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(s));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP || fetcher(lookup, s);\n    initP = null;\n    if (typeof p !== \"object\" || !(\"then\" in p)) {\n      loadEnd(pr, p);\n      return;\n    }\n    pr = p;\n    batch(() => {\n      setLoading(true);\n      trigger();\n    });\n    p.then(v => loadEnd(p, v), e => loadEnd(p, e, e));\n  }\n  Object.defineProperties(read, {\n    loading: {\n      get() {\n        return loading();\n      }\n    },\n    error: {\n      get() {\n        return error();\n      }\n    }\n  });\n  if (dynamic) createComputed(load);else load();\n  return [read, {\n    refetch: load,\n    mutate: set\n  }];\n}\nfunction readSignal() {\n  if (this.state && this.sources) {\n    const updates = Updates;\n    Updates = null;\n    this.state === STALE ? updateComputation(this) : lookDownstream(this);\n    Updates = updates;\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (Transition && Transition.running && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(value, isComp) {\n  if (this.comparator) {\n    if (Transition && Transition.running && Transition.sources.has(this)) {\n      if (this.comparator(this.tValue, value)) return value;\n    } else if (this.comparator(this.value, value)) return value;\n  }\n  if (Pending) {\n    if (this.pending === NOTPENDING) Pending.push(this);\n    this.pending = value;\n    return value;\n  }\n  if (Transition) {\n    if (Transition.running || !isComp && Transition.sources.has(this)) {\n      Transition.sources.add(this);\n      this.tValue = value;\n    }\n    if (!Transition.running) this.value = value;\n  } else this.value = value;\n  if (this.observers && (!Updates || this.observers.length)) {\n    runUpdates(() => {\n      for (let i = 0; i < this.observers.length; i += 1) {\n        const o = this.observers[i];\n        if (Transition && Transition.running && Transition.disposed.has(o)) continue;\n        if (o.observers && o.state !== PENDING) markUpstream(o);\n        o.state = STALE;\n        if (o.pure) Updates.push(o);else Effects.push(o);\n      }\n      if (Updates.length > 10e5) {\n        Updates = [];\n        throw new Error(\"Potential Infinite Loop Detected.\");\n      }\n    }, false);\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n        listener = Listener,\n        time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    Transition.running = true;\n    runComputation(node, node.tValue, time);\n    Transition.running = false;\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.observers && node.observers.length) {\n      writeSignal.call(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure) {\n  const c = {\n    fn,\n    state: STALE,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  return c;\n}\nfunction runTop(node) {\n  let top = node.state === STALE && node,\n      pending;\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const runningTransition = Transition && Transition.running;\n  while ((node.fn || runningTransition && node.attached) && (node = node.owner)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (node.state === PENDING) pending = node;else if (node.state === STALE) {\n      top = node;\n      pending = undefined;\n    }\n  }\n  if (pending) {\n    const updates = Updates;\n    Updates = null;\n    lookDownstream(pending);\n    Updates = updates;\n    if (!top || top.state !== STALE) return;\n    if (runningTransition) {\n      node = top;\n      while ((node.fn || node.attached) && (node = node.owner)) {\n        if (Transition.disposed.has(node)) return;\n      }\n    }\n  }\n  top && updateComputation(top);\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    fn();\n  } catch (err) {\n    handleError(err);\n  } finally {\n    completeUpdates(wait);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let cbs;\n  if (Transition && Transition.running) {\n    if (Transition.promises.size) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n    const sources = Transition.sources;\n    cbs = Transition.cb;\n    Transition = null;\n    batch(() => {\n      sources.forEach(v => {\n        v.value = v.tValue;\n        if (v.owned) {\n          for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n        }\n        if (v.tOwned) v.owned = v.tOwned;\n        delete v.tValue;\n        delete v.tOwned;\n      });\n      setTransPending(false);\n    });\n  }\n  if (Effects.length) batch(() => {\n    runEffects(Effects);\n    Effects = null;\n  });else {\n    Effects = null;\n  }\n  if (cbs) cbs.forEach(cb => cb());\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction runUserEffects(queue) {\n  let i,\n      userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  const resume = queue.length;\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n  for (i = resume; i < queue.length; i++) runTop(queue[i]);\n}\nfunction lookDownstream(node) {\n  node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (source.state === STALE) runTop(source);else if (source.state === PENDING) lookDownstream(source);\n    }\n  }\n}\nfunction markUpstream(node) {\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!o.state) {\n      o.state = PENDING;\n      o.observers && markUpstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n            index = node.sourceSlots.pop(),\n            obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n              s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.state = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  fns.forEach(f => f(err));\n}\nfunction lookup(owner, key) {\n  return owner && (owner.context && owner.context[key] || owner.owner && lookup(owner.owner, key));\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      let result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id) {\n  return function provider(props) {\n    return createMemo(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    });\n  };\n}\n\nconst $RAW = Symbol(\"state-raw\"),\n      $NODE = Symbol(\"state-node\"),\n      $PROXY = Symbol(\"state-proxy\"),\n      $NAME = Symbol(\"state-name\");\nfunction wrap$1(value, name) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps$1)\n    });\n    let keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction isWrappable(obj) {\n  return obj != null && typeof obj === \"object\" && (!obj.__proto__ || obj.__proto__ === Object.prototype || Array.isArray(obj));\n}\nfunction unwrap(item, set = new Set()) {\n  let result, unwrapped, v, prop;\n  if (result = item != null && item[$RAW]) return result;\n  if (!isWrappable(item) || set.has(item)) return item;\n  if (Array.isArray(item)) {\n    if (Object.isFrozen(item)) item = item.slice(0);else set.add(item);\n    for (let i = 0, l = item.length; i < l; i++) {\n      v = item[i];\n      if ((unwrapped = unwrap(v, set)) !== v) item[i] = unwrapped;\n    }\n  } else {\n    if (Object.isFrozen(item)) item = Object.assign({}, item);else set.add(item);\n    let keys = Object.keys(item),\n        desc = Object.getOwnPropertyDescriptors(item);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      prop = keys[i];\n      if (desc[prop].get) continue;\n      v = item[prop];\n      if ((unwrapped = unwrap(v, set)) !== v) item[prop] = unwrapped;\n    }\n  }\n  return item;\n}\nfunction getDataNodes(target) {\n  let nodes = target[$NODE];\n  if (!nodes) Object.defineProperty(target, $NODE, {\n    value: nodes = {}\n  });\n  return nodes;\n}\nfunction proxyDescriptor(target, property) {\n  const desc = Reflect.getOwnPropertyDescriptor(target, property);\n  if (!desc || desc.get || property === $PROXY || property === $NODE || property === $NAME) return desc;\n  delete desc.value;\n  delete desc.writable;\n  desc.get = () => target[$PROXY][property];\n  return desc;\n}\nfunction createDataNode() {\n  const [s, set] = createSignal(undefined, false);\n  s.set = set;\n  return s;\n}\nconst proxyTraps$1 = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    const value = target[property];\n    if (property === $NODE || property === \"__proto__\") return value;\n    const wrappable = isWrappable(value);\n    if (Listener && (typeof value !== \"function\" || target.hasOwnProperty(property))) {\n      let nodes, node;\n      if (wrappable && (nodes = getDataNodes(value))) {\n        node = nodes._ || (nodes._ = createDataNode());\n        node();\n      }\n      nodes = getDataNodes(target);\n      node = nodes[property] || (nodes[property] = createDataNode());\n      node();\n    }\n    return wrappable ? wrap$1(value) : value;\n  },\n  set() {\n    return true;\n  },\n  deleteProperty() {\n    return true;\n  },\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction setProperty(state, property, value) {\n  if (state[property] === value) return;\n  const array = Array.isArray(state);\n  const len = state.length;\n  const notify = array || !(property in state);\n  if (value === undefined) {\n    delete state[property];\n  } else state[property] = value;\n  let nodes = getDataNodes(state),\n      node;\n  (node = nodes[property]) && node.set();\n  if (array && state.length !== len) (node = nodes.length) && node.set();\n  notify && (node = nodes._) && node.set();\n}\nfunction mergeState(state, value) {\n  const keys = Object.keys(value);\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    setProperty(state, key, value[key]);\n  }\n}\nfunction updatePath(current, path, traversed = []) {\n  let part,\n      prev = current;\n  if (path.length > 1) {\n    part = path.shift();\n    const partType = typeof part,\n          isArray = Array.isArray(current);\n    if (Array.isArray(part)) {\n      for (let i = 0; i < part.length; i++) {\n        updatePath(current, [part[i]].concat(path), [part[i]].concat(traversed));\n      }\n      return;\n    } else if (isArray && partType === \"function\") {\n      for (let i = 0; i < current.length; i++) {\n        if (part(current[i], i)) updatePath(current, [i].concat(path), [i].concat(traversed));\n      }\n      return;\n    } else if (isArray && partType === \"object\") {\n      const {\n        from = 0,\n        to = current.length - 1,\n        by = 1\n      } = part;\n      for (let i = from; i <= to; i += by) {\n        updatePath(current, [i].concat(path), [i].concat(traversed));\n      }\n      return;\n    } else if (path.length > 1) {\n      updatePath(current[part], path, [part].concat(traversed));\n      return;\n    }\n    prev = current[part];\n    traversed = [part].concat(traversed);\n  }\n  let value = path[0];\n  if (typeof value === \"function\") {\n    value = value(prev, traversed);\n    if (value === prev) return;\n  }\n  if (part === undefined && value == undefined) return;\n  value = unwrap(value);\n  if (part === undefined || isWrappable(prev) && isWrappable(value) && !Array.isArray(value)) {\n    mergeState(prev, value);\n  } else setProperty(current, part, value);\n}\nfunction createState(state, options) {\n  const unwrappedState = unwrap(state || {});\n  const wrappedState = wrap$1(unwrappedState);\n  function setState(...args) {\n    batch(() => updatePath(unwrappedState, args));\n  }\n  return [wrappedState, setState];\n}\n\nconst proxyTraps = {\n  get(target, property, receiver) {\n    if (property === $RAW) return target;\n    if (property === $PROXY) return receiver;\n    const value = target[property];\n    if (property === $NODE || property === \"__proto__\") return value;\n    const wrappable = isWrappable(value);\n    if (Listener && (typeof value !== \"function\" || target.hasOwnProperty(property))) {\n      let nodes, node;\n      if (wrappable && (nodes = getDataNodes(value))) {\n        node = nodes._ || (nodes._ = createDataNode());\n        node();\n      }\n      nodes = getDataNodes(target);\n      node = nodes[property] || (nodes[property] = createDataNode());\n      node();\n    }\n    return wrappable ? wrap(value) : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined);\n    return true;\n  },\n  getOwnPropertyDescriptor: proxyDescriptor\n};\nfunction wrap(value, name) {\n  let p = value[$PROXY];\n  if (!p) {\n    Object.defineProperty(value, $PROXY, {\n      value: p = new Proxy(value, proxyTraps)\n    });\n    let keys = Object.keys(value),\n        desc = Object.getOwnPropertyDescriptors(value);\n    for (let i = 0, l = keys.length; i < l; i++) {\n      const prop = keys[i];\n      if (desc[prop].get) {\n        const get = desc[prop].get.bind(p);\n        Object.defineProperty(value, prop, {\n          get\n        });\n      }\n      if (desc[prop].set) {\n        const og = desc[prop].set,\n              set = v => batch(() => og.call(p, v));\n        Object.defineProperty(value, prop, {\n          set\n        });\n      }\n    }\n  }\n  return p;\n}\nfunction createMutable(state, options) {\n  const unwrappedState = unwrap(state || {});\n  const wrappedState = wrap(unwrappedState);\n  return wrappedState;\n}\n\nfunction applyState(target, parent, property, merge, key) {\n  let previous = parent[property];\n  if (target === previous) return;\n  if (!isWrappable(target) || !isWrappable(previous) || key && target[key] !== previous[key]) {\n    target !== previous && setProperty(parent, property, target);\n    return;\n  }\n  if (Array.isArray(target)) {\n    if (target.length && previous.length && (!merge || key && target[0][key] != null)) {\n      let i, j, start, end, newEnd, item, newIndicesNext, keyVal;\n      for (start = 0, end = Math.min(previous.length, target.length); start < end && (previous[start] === target[start] || key && previous[start][key] === target[start][key]); start++) {\n        applyState(target[start], previous, start, merge, key);\n      }\n      const temp = new Array(target.length),\n            newIndices = new Map();\n      for (end = previous.length - 1, newEnd = target.length - 1; end >= start && newEnd >= start && (previous[end] === target[newEnd] || key && previous[end][key] === target[newEnd][key]); end--, newEnd--) {\n        temp[newEnd] = previous[end];\n      }\n      if (start > newEnd || start > end) {\n        for (j = start; j <= newEnd; j++) setProperty(previous, j, target[j]);\n        for (; j < target.length; j++) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        }\n        if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n        return;\n      }\n      newIndicesNext = new Array(newEnd + 1);\n      for (j = newEnd; j >= start; j--) {\n        item = target[j];\n        keyVal = key ? item[key] : item;\n        i = newIndices.get(keyVal);\n        newIndicesNext[j] = i === undefined ? -1 : i;\n        newIndices.set(keyVal, j);\n      }\n      for (i = start; i <= end; i++) {\n        item = previous[i];\n        keyVal = key ? item[key] : item;\n        j = newIndices.get(keyVal);\n        if (j !== undefined && j !== -1) {\n          temp[j] = previous[i];\n          j = newIndicesNext[j];\n          newIndices.set(keyVal, j);\n        }\n      }\n      for (j = start; j < target.length; j++) {\n        if (j in temp) {\n          setProperty(previous, j, temp[j]);\n          applyState(target[j], previous, j, merge, key);\n        } else setProperty(previous, j, target[j]);\n      }\n    } else {\n      for (let i = 0, len = target.length; i < len; i++) {\n        applyState(target[i], previous, i, merge, key);\n      }\n    }\n    if (previous.length > target.length) setProperty(previous, \"length\", target.length);\n    return;\n  }\n  const targetKeys = Object.keys(target);\n  for (let i = 0, len = targetKeys.length; i < len; i++) {\n    applyState(target[targetKeys[i]], previous, targetKeys[i], merge, key);\n  }\n  const previousKeys = Object.keys(previous);\n  for (let i = 0, len = previousKeys.length; i < len; i++) {\n    if (target[previousKeys[i]] === undefined) setProperty(previous, previousKeys[i], undefined);\n  }\n}\nfunction reconcile(value, options = {}) {\n  const {\n    merge,\n    key = \"id\"\n  } = options,\n        v = unwrap(value);\n  return state => {\n    if (!isWrappable(state) || !isWrappable(v)) return v;\n    applyState(v, {\n      state\n    }, \"state\", merge, key);\n    return state;\n  };\n}\nconst setterTraps = {\n  get(target, property) {\n    if (property === $RAW) return target;\n    const value = target[property];\n    return isWrappable(value) ? new Proxy(value, setterTraps) : value;\n  },\n  set(target, property, value) {\n    setProperty(target, property, unwrap(value));\n    return true;\n  },\n  deleteProperty(target, property) {\n    setProperty(target, property, undefined);\n    return true;\n  }\n};\nfunction produce(fn) {\n  return state => {\n    if (isWrappable(state)) fn(new Proxy(state, setterTraps));\n    return state;\n  };\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      len = 0,\n      indexes = mapFn.length > 1 ? [] : null,\n      ctx = Owner;\n  onCleanup(() => {\n    for (let i = 0, length = disposers.length; i < length; i++) disposers[i]();\n  });\n  return () => {\n    let newItems = list() || [],\n        i,\n        j;\n    return untrack(() => {\n      let newLen = newItems.length,\n          newIndices,\n          newIndicesNext,\n          temp,\n          tempdisposers,\n          tempIndexes,\n          start,\n          end,\n          newEnd,\n          item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          for (i = 0; i < len; i++) disposers[i]();\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          }, ctx);\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n          for (j = 0; j < newLen; j++) {\n            items[j] = newItems[j];\n            mapped[j] = createRoot(mapper, ctx);\n          }\n          len = newLen;\n        } else {\n          temp = new Array(newLen);\n          tempdisposers = new Array(newLen);\n          indexes && (tempIndexes = new Array(newLen));\n          for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n          for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n            temp[newEnd] = mapped[end];\n            tempdisposers[newEnd] = disposers[end];\n            indexes && (tempIndexes[newEnd] = indexes[end]);\n          }\n          newIndices = new Map();\n          newIndicesNext = new Array(newEnd + 1);\n          for (j = newEnd; j >= start; j--) {\n            item = newItems[j];\n            i = newIndices.get(item);\n            newIndicesNext[j] = i === undefined ? -1 : i;\n            newIndices.set(item, j);\n          }\n          for (i = start; i <= end; i++) {\n            item = items[i];\n            j = newIndices.get(item);\n            if (j !== undefined && j !== -1) {\n              temp[j] = mapped[i];\n              tempdisposers[j] = disposers[i];\n              indexes && (tempIndexes[j] = indexes[i]);\n              j = newIndicesNext[j];\n              newIndices.set(item, j);\n            } else disposers[i]();\n          }\n          for (j = start; j < newLen; j++) {\n            if (j in temp) {\n              mapped[j] = temp[j];\n              disposers[j] = tempdisposers[j];\n              if (indexes) {\n                indexes[j] = tempIndexes[j];\n                indexes[j](j);\n              }\n            } else mapped[j] = createRoot(mapper, ctx);\n          }\n          len = mapped.length = newLen;\n          items = newItems.slice(0);\n        }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      signals = [],\n      len = 0,\n      i,\n      ctx = Owner;\n  onCleanup(() => {\n    for (let i = 0, length = disposers.length; i < length; i++) disposers[i]();\n  });\n  return () => {\n    const newItems = list() || [];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          for (i = 0; i < len; i++) disposers[i]();\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          }, ctx);\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper, ctx);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = mapped.length = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i], false);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nfunction createComponent(Comp, props) {\n  if (sharedConfig.context) {\n    const c = sharedConfig.context;\n    setHydrateContext(nextHydrateContext());\n    const r = untrack(() => Comp(props));\n    setHydrateContext(c);\n    return r;\n  }\n  return untrack(() => Comp(props));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction mergeProps(...sources) {\n  return new Proxy({\n    get(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        const v = sources[i][property];\n        if (v !== undefined) return v;\n      }\n    },\n    has(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        if (property in sources[i]) return true;\n      }\n      return false;\n    },\n    keys() {\n      const keys = [];\n      for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(sources[i]));\n      return [...new Set(keys)];\n    }\n  }, propTraps);\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  const res = keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      if (descriptors[key]) Object.defineProperty(clone, key, descriptors[key]);\n    }\n    return clone;\n  });\n  res.push(new Proxy({\n    get(property) {\n      return blocked.has(property) ? undefined : props[property];\n    },\n    has(property) {\n      return blocked.has(property) ? false : property in props;\n    },\n    keys() {\n      return Object.keys(props).filter(k => !blocked.has(k));\n    }\n  }, propTraps));\n  return res;\n}\nfunction lazy(fn) {\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    let comp;\n    if (ctx && sharedConfig.resources) {\n      ctx.count++;\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(mod.default);\n        setHydrateContext(undefined);\n      });\n      comp = s;\n    } else {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => (p || (p = fn())).then(mod => mod.default);\n  return wrap;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback ? fallback : undefined), undefined, false);\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback ? fallback : undefined), undefined, false);\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const condition = createMemo(() => props.when, undefined, (a, b) => strictEqual ? a === b : !a === !b);\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      return (strictEqual = typeof child === \"function\" && child.length > 0) ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  });\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  const conditions = children(() => props.children),\n        evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds)) conds = [conds];\n    for (let i = 0; i < conds.length; i++) {\n      const c = conds[i].when;\n      if (c) return [i, c, conds[i]];\n    }\n    return [-1];\n  }, undefined, (a, b) => a && a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2]);\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    return (strictEqual = typeof c === \"function\" && c.length > 0) ? untrack(() => c(when)) : c;\n  });\n}\nfunction Match(props) {\n  return props;\n}\nfunction ErrorBoundary(props) {\n  const [errored, setErrored] = createSignal();\n  onError(setErrored);\n  let e;\n  return createMemo(() => {\n    if ((e = errored()) != null) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored(null))) : f;\n    }\n    return props.children;\n  });\n}\n\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let index = 0,\n      suspenseSetter,\n      showContent,\n      showFallback;\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) {\n    const [inFallback, setFallback] = createSignal(false);\n    suspenseSetter = setFallback;\n    [showContent, showFallback] = listContext.register(inFallback);\n  }\n  const registry = [],\n        comp = createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        const [showingContent, showContent] = createSignal(false),\n              [showingFallback, showFallback] = createSignal(false);\n        registry[index++] = {\n          inFallback,\n          showContent,\n          showFallback\n        };\n        return [showingContent, showingFallback];\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n  createComputed(() => {\n    const reveal = props.revealOrder,\n          tail = props.tail,\n          visibleContent = showContent ? showContent() : true,\n          visibleFallback = showFallback ? showFallback() : true,\n          reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = registry.every(i => !i.inFallback());\n      suspenseSetter && suspenseSetter(!all);\n      registry.forEach(i => {\n        i.showContent(all && visibleContent);\n        i.showFallback(visibleFallback);\n      });\n      return;\n    }\n    let stop = false;\n    for (let i = 0, len = registry.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n            s = registry[n].inFallback();\n      if (!stop && !s) {\n        registry[n].showContent(visibleContent);\n        registry[n].showFallback(visibleFallback);\n      } else {\n        const next = !stop;\n        if (next && suspenseSetter) suspenseSetter(true);\n        if (!tail || next && tail === \"collapsed\") {\n          registry[n].showFallback(visibleFallback);\n        } else registry[n].showFallback(false);\n        stop = true;\n        registry[n].showContent(next);\n      }\n    }\n    if (!stop && suspenseSetter) suspenseSetter(false);\n  });\n  return comp;\n}\nfunction Suspense(props) {\n  let counter = 0,\n      showContent,\n      showFallback;\n  const [inFallback, setFallback] = createSignal(false),\n        SuspenseContext = getSuspenseContext(),\n        store = {\n    increment: () => {\n      if (++counter === 1) setFallback(true);\n    },\n    decrement: () => {\n      if (--counter === 0) setFallback(false);\n    },\n    inFallback,\n    effects: [],\n    resolved: false\n  };\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) [showContent, showFallback] = listContext.register(store.inFallback);\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      const rendered = untrack(() => props.children);\n      return createMemo(() => {\n        const inFallback = store.inFallback(),\n              visibleContent = showContent ? showContent() : true,\n              visibleFallback = showFallback ? showFallback() : true;\n        if (!inFallback && visibleContent) {\n          store.resolved = true;\n          resumeEffects(store.effects);\n          return rendered;\n        }\n        if (!visibleFallback) return;\n        return props.fallback;\n      });\n    }\n  });\n}\n\nfunction awaitSuspense() {}\nlet DEV;\n\nexport { $RAW, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, awaitSuspense, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createMutable, createRenderEffect, createResource, createRoot, createSelector, createSignal, createState, equalFn, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, on, onCleanup, onError, onMount, produce, reconcile, requestCallback, runWithOwner, sharedConfig, splitProps, untrack, unwrap, useContext, useTransition };\n","import { createMemo, createRoot, createRenderEffect, sharedConfig, createSignal, onCleanup, splitProps, untrack } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"allowpaymentrequest\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"ismap\", \"itemscope\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\", \"truespeed\"];\nconst Properties = new Set([\"className\", \"indeterminate\", \"value\", ...booleans]);\nconst ChildProperties = new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nconst DelegatedEvents = new Set([\"beforeinput\", \"click\", \"dblclick\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\n\nfunction memo(fn, equal) {\n  return createMemo(fn, undefined, equal);\n}\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = a[aEnd - 1].nextSibling,\n      map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) parentNode.removeChild(a[aStart]);\n        aStart++;\n      }\n    } else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    } else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n              sequence = 1,\n              t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else parentNode.removeChild(a[aStart++]);\n    }\n  }\n}\n\nconst $$EVENTS = Symbol(\"delegated-events\");\nfunction render(code, element, init) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    insert(element, code(), element.firstChild ? null : undefined, init);\n  });\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  if (check && t.innerHTML.split(\"<\").length - 1 !== check) throw `Template html does not match input:\\n${t.innerHTML}\\n\\n${html}`;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents() {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    node.addEventListener(name, e => handler[0](handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value),\n        prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || key in value) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n          classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue) continue;\n    toggleClassKey(node, key, classValue);\n    prev[key] = classValue;\n  }\n  return value;\n}\nfunction style(node, value, prev = {}) {\n  const nodeStyle = node.style;\n  if (typeof value === \"string\") return nodeStyle.cssText = value;\n  typeof prev === \"string\" && (prev = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, accessor, isSVG, skipChildren) {\n  if (typeof accessor === \"function\") {\n    createRenderEffect(current => spreadExpression(node, accessor(), current, isSVG, skipChildren));\n  } else spreadExpression(node, accessor, undefined, isSVG, skipChildren);\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}) {\n  let isCE, isProp, isChildProp;\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    if (value === prevProps[prop]) continue;\n    if (prop === \"style\") {\n      style(node, value, prevProps[prop]);\n    } else if (prop === \"class\" && !isSVG) {\n      node.className = value;\n    } else if (prop === \"classList\") {\n      classList(node, value, prevProps[prop]);\n    } else if (prop === \"ref\") {\n      value(node);\n    } else if (prop.slice(0, 3) === \"on:\") {\n      node.addEventListener(prop.slice(3), value);\n    } else if (prop.slice(0, 10) === \"oncapture:\") {\n      node.addEventListener(prop.slice(10), value, true);\n    } else if (prop.slice(0, 2) === \"on\") {\n      const name = prop.slice(2).toLowerCase();\n      const delegate = DelegatedEvents.has(name);\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (isProp = Properties.has(prop)) || (isCE = node.nodeName.includes(\"-\"))) {\n      if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[prop] = value;\n    } else {\n      const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n      if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n    }\n    prevProps[prop] = value;\n  }\n}\nfunction hydrate(code, element) {\n  sharedConfig.resources = globalThis._$HYDRATION.resources;\n  sharedConfig.completed = globalThis._$HYDRATION.completed;\n  sharedConfig.events = globalThis._$HYDRATION.events;\n  sharedConfig.context = {\n    id: \"\",\n    count: 0,\n    loadResource: globalThis._$HYDRATION.loadResource\n  };\n  sharedConfig.registry = new Map();\n  gatherHydratable(element);\n  const dispose = render(code, element, [...element.childNodes]);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction gatherHydratable(element) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    sharedConfig.registry.set(node.getAttribute(\"data-hk\"), node);\n  }\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMarker(start) {\n  let end = start,\n      count = 0,\n      current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node;\n    }\n  });\n  while (node !== null) {\n    const handler = node[key];\n    if (handler) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler(data, e) : handler(e);\n      if (e.cancelBubble) return;\n    }\n    node = node.host && node.host !== node && node.host instanceof Node ? node.host : node.parentNode;\n  }\n}\nfunction spreadExpression(node, props, prevProps = {}, isSVG, skipChildren) {\n  if (!skipChildren && \"children\" in props) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps));\n  return prevProps;\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n        multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    if (normalizeIncomingArray(array, value, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context && current.length) return current;\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else {\n      if (Array.isArray(current)) {\n        if (current.length === 0) {\n          appendNodes(parent, array, marker);\n        } else reconcileArrays(parent, current, array);\n      } else if (current == null || current === \"\") {\n        appendNodes(parent, array);\n      } else {\n        reconcileArrays(parent, multi && current || [parent.firstChild], array);\n      }\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else console.warn(`Skipped inserting`, value);\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n        t;\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item) || dynamic;\n    } else if ((t = typeof item) === \"string\") {\n      normalized.push(document.createTextNode(item));\n    } else if (t === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item]) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else normalized.push(document.createTextNode(item.toString()));\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && parent.removeChild(el);\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\n\nfunction renderToString(fn, options) {}\nfunction renderToStringAsync(fn, options) {}\nfunction renderToNodeStream(fn, options) {}\nfunction renderToWebStream(fn, options) {}\nfunction ssr(template, ...nodes) {}\nfunction resolveSSRNode(node) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrSpread(accessor) {}\nfunction ssrBoolean(key, value) {}\nfunction escape(html) {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props,\n        marker = document.createTextNode(\"\"),\n        mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"host\", {\n      get() {\n        return marker.parentNode;\n      }\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  return createMemo(() => {\n    const component = p.component;\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, ChildProperties, DelegatedEvents, Dynamic, Portal, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, gatherHydratable, getHydrationKey, getNextElement, getNextMarker, hydrate, insert, isServer, memo, render, renderToNodeStream, renderToString, renderToStringAsync, renderToWebStream, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrBoolean, ssrClassList, ssrSpread, ssrStyle, style, template };\n","import { template as _$template } from \"solid-js/web\";\nimport { delegateEvents as _$delegateEvents } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\nimport { insert as _$insert } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\n\nconst _tmpl$ = _$template(`<div id=\"intentions-list\"><ol class=\"list-group\"></ol></div>`, 4),\n      _tmpl$2 = _$template(`<li><span></span></li>`, 4);\n\nimport { createSignal, createSelector, For, createComputed, on } from \"solid-js\";\nimport { $class } from \"../helpers\";\nimport type { ListItem, ListMovement } from \"../types\";\nexport interface Props {\n  suggestions: Array<ListItem>;\n  selectCallback: (suggestion: ListItem) => void;\n  ref?: (refs: Refs) => void;\n}\nexport interface Refs {\n  setMovement: (movement: ListMovement) => void;\n  setConfirmed: (confiremd: boolean) => void;\n}\nexport function ListElement(props: Props) {\n  // current active index\n  const [getActiveIndex, setActiveIndex] = createSignal(-1); // current active id\n\n  const isSelected = createSelector(getActiveIndex); // movement state\n\n  const [getMovement, setMovement] = createSignal<string | undefined>(\"move-to-top\"); // selected state\n\n  const [getConfirmed, setConfirmed] = createSignal(false); // store the exported setters in the ref\n\n  props.ref?.({\n    setMovement,\n    setConfirmed\n  });\n\n  function handleSelection(suggestion: ListItem, index: number) {\n    // call its associated callback\n    props.selectCallback(suggestion); // store it in the signal\n\n    setActiveIndex(index);\n  }\n\n  function handleMove() {\n    const suggestionsCount = props.suggestions.length;\n    const prevIndex = getActiveIndex();\n    let index = prevIndex;\n    const movement = getMovement();\n\n    if (movement === \"up\") {\n      index--;\n    } else if (movement === \"down\") {\n      index++;\n    } else if (movement === \"move-to-top\") {\n      index = 0;\n    } else if (movement === \"move-to-bottom\") {\n      index = suggestionsCount;\n    } // TODO: Implement page up/down\n\n\n    index %= suggestionsCount;\n\n    if (index < 0) {\n      index = suggestionsCount + index;\n    }\n\n    if (index !== prevIndex) {\n      setActiveIndex(index);\n    } // unset the movement to allow solid to check the next movement\n\n\n    setMovement(undefined);\n  }\n\n  createComputed(on(getConfirmed, () => {\n    if (getConfirmed()) {\n      // Runs the selection callback when the user confirms the selection using keyboard\n      // Updating prop.select in the parent result in running this function\n      const index = getActiveIndex();\n      handleSelection(props.suggestions[index], index);\n    }\n  }));\n  createComputed(on(getMovement, handleMove));\n  let className = \"select-list popover-list\"; // add scrolling if more than 7 itmes\n\n  if (props.suggestions.length > 7) {\n    className += \" intentions-scroll\";\n  }\n\n  return (() => {\n    const _el$ = _tmpl$.cloneNode(true),\n          _el$2 = _el$.firstChild;\n\n    _el$.className = className;\n\n    _$insert(_el$2, _$createComponent(For, {\n      get each() {\n        return props.suggestions;\n      },\n\n      children: (suggestion, getIndex) => {\n        const index = getIndex();\n        return (() => {\n          const _el$3 = _tmpl$2.cloneNode(true),\n                _el$4 = _el$3.firstChild;\n\n          _el$4.$$click = () => {\n            handleSelection(suggestion, index);\n          };\n\n          _$insert(_el$4, () => suggestion.title);\n\n          _$effect(_p$ => {\n            const _v$ = isSelected(index) ? \"selected\" : \"\",\n                  _v$2 = suggestion[$class];\n\n            _v$ !== _p$._v$ && (_el$3.className = _p$._v$ = _v$);\n            _v$2 !== _p$._v$2 && (_el$4.className = _p$._v$2 = _v$2);\n            return _p$;\n          }, {\n            _v$: undefined,\n            _v$2: undefined\n          });\n\n          return _el$3;\n        })();\n      }\n    }));\n\n    return _el$;\n  })();\n}\n\n_$delegateEvents([\"click\"]);","import { Disposable } from \"atom\";\nimport { Intentions } from \"./main\";\nimport type { ListProvider, HighlightProvider } from \"./types\";\nlet intentions: Intentions | undefined = undefined;\nexport function activate() {\n  intentions = new Intentions();\n  intentions.activate();\n}\nexport function deactivate() {\n  intentions?.dispose();\n}\nexport function consumeListIntentions(provider: ListProvider | Array<ListProvider>) {\n  const providers = Array.isArray(provider) ? provider : [provider];\n\n  if (intentions === undefined) {\n    return;\n  }\n\n  for (const entry of providers) {\n    intentions.consumeListProvider(entry);\n  }\n\n  return new Disposable(() => {\n    if (intentions === undefined) {\n      return;\n    }\n\n    for (const entry of providers) {\n      intentions.deleteListProvider(entry);\n    }\n  });\n}\nexport function consumeHighlightIntentions(provider: HighlightProvider | Array<HighlightProvider>) {\n  const providers = Array.isArray(provider) ? provider : [provider];\n\n  if (intentions === undefined) {\n    return;\n  }\n\n  for (const entry of providers) {\n    intentions.consumeHighlightProvider(entry);\n  }\n\n  return new Disposable(() => {\n    if (intentions === undefined) {\n      return;\n    }\n\n    for (const entry of providers) {\n      intentions.deleteHighlightProvider(entry);\n    }\n  });\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _disposable = require('./disposable');\n\nvar _disposable2 = _interopRequireDefault(_disposable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Emitter = function () {\n  function Emitter() {\n    _classCallCheck(this, Emitter);\n\n    this.disposed = false;\n    this.handlers = {};\n  }\n\n  _createClass(Emitter, [{\n    key: 'on',\n    value: function on(eventName, handler) {\n      var _this = this;\n\n      if (this.disposed) {\n        throw new Error('Emitter has been disposed');\n      }\n      if (typeof handler !== 'function') {\n        throw new Error('Event handler must be a function');\n      }\n      var callbacks = this.handlers[eventName];\n      if (typeof callbacks === 'undefined') {\n        callbacks = [handler];\n        this.handlers[eventName] = callbacks;\n      } else {\n        callbacks.push(handler);\n      }\n      return new _disposable2.default(function () {\n        _this.off(eventName, handler);\n      });\n    }\n  }, {\n    key: 'off',\n    value: function off(eventName, handler) {\n      if (this.disposed) {\n        return;\n      }\n      if (!this.handlers[eventName]) {\n        return;\n      }\n      var index = this.handlers[eventName].indexOf(handler);\n      if (index !== -1) {\n        this.handlers[eventName].splice(index, 1);\n      }\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.handlers = {};\n    }\n  }, {\n    key: 'emit',\n    value: function emit(eventName) {\n      if (this.disposed) {\n        return Promise.resolve([]);\n      }\n      if (!this.handlers[eventName]) {\n        return Promise.resolve([]);\n      }\n\n      var promises = [];\n      var callbacks = this.handlers[eventName];\n\n      for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n\n      for (var i = 0, length = callbacks.length; i < length; ++i) {\n        promises.push(callbacks[i].apply(null, params));\n      }\n      return Promise.all(promises);\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.disposed = true;\n      this.clear();\n    }\n  }]);\n\n  return Emitter;\n}();\n\nexports.default = Emitter;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _assert = require('assert');\n\nvar _assert2 = _interopRequireDefault(_assert);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Disposable = function () {\n  function Disposable(callback) {\n    _classCallCheck(this, Disposable);\n\n    (0, _assert2.default)(typeof callback === 'function', 'callback should be a function');\n    this.callback = callback;\n  }\n\n  _createClass(Disposable, [{\n    key: 'dispose',\n    value: function dispose() {\n      if (this.callback) {\n        this.callback();\n        this.callback = null;\n      }\n    }\n  }, {\n    key: 'disposed',\n    get: function get() {\n      return this.callback === null;\n    }\n  }]);\n\n  return Disposable;\n}();\n\nexports.default = Disposable;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nfunction validate(params) {\n  for (var i = 0, length = params.length; i < length; ++i) {\n    var param = params[i];\n    if (!param || typeof param.dispose !== 'function' && typeof param !== 'function') {\n      throw new Error('Invalid disposable provided');\n    }\n  }\n}","'use strict';\n\nvar _eventKit = require('event-kit');\n\nfunction disposableEvent(target, eventName, callback, options) {\n  if (target.on) {\n    target.on(eventName, callback, options);\n  } else if (target.addListener) {\n    target.addListener(eventName, callback, options);\n  } else if (target.addEventListener) {\n    target.addEventListener(eventName, callback, options);\n  } else {\n    throw new Error('Unknown event emitter');\n  }\n  return new _eventKit.Disposable(function () {\n    if (target.off) {\n      target.off(eventName, callback);\n    } else if (target.removeListener) {\n      target.removeListener(eventName, callback);\n    } else if (target.removeEventListener) {\n      target.removeEventListener(eventName, callback);\n    } else {\n      throw new Error('Unknown event emitter');\n    }\n  });\n}\n\nmodule.exports = disposableEvent;","import disposableEvent from \"disposable-event\";\nimport { CompositeDisposable, Emitter } from \"sb-event-kit\"; // Emitter of sb-event-kit is necessary for commands\n\nimport { Disposable } from \"atom\";\nimport type { TextEditor } from \"atom\";\nimport type { ListMovement } from \"./types\";\nimport type { CommandEventExtended } from \"./types/atom\";\nimport { TargetWithAddEventListener } from \"disposable-event/src/target\";\nimport { showError } from \"./helpers\"; // NOTE:\n// We don't *need* to add the intentions:hide command\n// But we're doing it anyway because it helps us keep the code clean\n// And can also be used by any other package to fully control this package\n// List of core commands we allow during the list, everything else closes it\n\nconst CORE_COMMANDS = new Set([\"core:move-up\", \"core:move-down\", \"core:page-up\", \"core:page-down\", \"core:move-to-top\", \"core:move-to-bottom\"]);\ntype ShowListEvent = {\n  show: boolean;\n  editor: TextEditor;\n};\nexport class Commands {\n  active: {\n    type: \"list\" | \"highlight\";\n    subscriptions: CompositeDisposable;\n  } | null = null;\n  emitter = new Emitter<{}, // eslint-disable-line @typescript-eslint/ban-types\n  {\n    \"list-show\": ShowListEvent;\n    \"list-move\": ListMovement;\n    \"list-confirm\": never;\n    \"list-hide\": never;\n    \"highlights-show\": ShowListEvent;\n    \"highlights-hide\": never;\n  }>();\n  subscriptions = new CompositeDisposable();\n\n  constructor() {\n    this.subscriptions.add(this.emitter);\n  }\n\n  activate() {\n    this.subscriptions.add(atom.commands.add(\"atom-text-editor:not([mini])\", {\n      \"intentions:show\": async (e: CommandEventExtended) => {\n        if (this.active?.type === \"list\") {\n          return;\n        }\n\n        const subscriptions = new CompositeDisposable();\n        const processListShowP = this.processListShow(subscriptions);\n\n        if (e.originalEvent?.type !== \"keydown\") {\n          return;\n        }\n\n        setImmediate(() => {\n          let matched = true;\n          subscriptions.add(atom.keymaps.onDidMatchBinding(function ({\n            binding\n          }) {\n            matched = matched && CORE_COMMANDS.has(binding.command);\n          }), disposableEvent(((document.body as unknown) as TargetWithAddEventListener), \"keyup\", () => {\n            if (matched) {\n              return;\n            }\n\n            subscriptions.dispose();\n            this.processListHide();\n          }));\n        });\n        await processListShowP;\n      },\n      \"intentions:hide\": this.processListHide,\n      \"intentions:highlight\": async (e: CommandEventExtended<KeyboardEvent>) => {\n        if (this.active?.type === \"highlight\") {\n          return;\n        }\n\n        e.abortKeyBinding();\n        const subscriptions = new CompositeDisposable();\n        const processHighlightsShowP = this.processHighlightsShow(subscriptions);\n\n        if (e.originalEvent?.type !== \"keydown\") {\n          return;\n        }\n\n        const {\n          code\n        } = e.originalEvent; // code will be ControlLeft or ControlRight\n\n        subscriptions.add(disposableEvent(((document.body as unknown) as TargetWithAddEventListener), \"keyup\", (upE: KeyboardEvent) => {\n          if (upE.code !== code) {\n            return;\n          }\n\n          subscriptions.dispose();\n          this.processHighlightsHide();\n        }));\n        await processHighlightsShowP;\n      }\n    }), atom.commands.add(\"atom-text-editor.intentions-list:not([mini])\", {\n      \"intentions:confirm\": this.stoppingEvent(this.processListConfirm),\n      \"core:move-up\": this.stoppingEvent(() => this.processListMove(\"up\")),\n      \"core:move-down\": this.stoppingEvent(() => this.processListMove(\"down\")),\n      \"core:page-up\": this.stoppingEvent(() => this.processListMove(\"page-up\")),\n      \"core:page-down\": this.stoppingEvent(() => this.processListMove(\"page-down\")),\n      \"core:move-to-top\": this.stoppingEvent(() => this.processListMove(\"move-to-top\")),\n      \"core:move-to-bottom\": this.stoppingEvent(() => this.processListMove(\"move-to-bottom\"))\n    }));\n  }\n\n  stoppingEvent(callback: (event: Event) => void): (event: Event) => void {\n    return (event: Event) => {\n      event.stopImmediatePropagation();\n      callback.call(this, event);\n    };\n  }\n\n  async processListShow(subscription: (CompositeDisposable | Disposable) | null | undefined = null) {\n    if (this.active !== null) {\n      switch (this.active.type) {\n        case \"list\":\n          throw new Error(\"Already active\");\n\n        case \"highlight\":\n          this.processHighlightsHide();\n          break;\n\n        default:\n      }\n    }\n\n    const editor = atom.workspace.getActiveTextEditor();\n\n    if (editor === undefined) {\n      return;\n    }\n\n    const editorElement = atom.views.getView(editor);\n    const subscriptions = new CompositeDisposable();\n\n    if (subscription) {\n      subscriptions.add(subscription);\n    }\n\n    if (!(await this.shouldListShow(editor))) {\n      return;\n    }\n\n    this.active = {\n      type: \"list\",\n      subscriptions\n    };\n    subscriptions.add(() => {\n      if (this.active !== null && this.active.type === \"list\" && this.active.subscriptions === subscriptions) {\n        this.processListHide();\n        this.active = null;\n      }\n\n      editorElement.classList.remove(\"intentions-list\");\n    }, disposableEvent(((document.body as unknown) as TargetWithAddEventListener), \"mouseup\", function () {\n      setTimeout(function () {\n        subscriptions.dispose();\n      }, 10);\n    }));\n    editorElement.classList.add(\"intentions-list\");\n  }\n\n  processListHide() {\n    if (this.active?.type !== \"list\") {\n      return;\n    }\n\n    const {\n      subscriptions\n    } = this.active;\n    this.active = null;\n    subscriptions.dispose();\n    this.emitter.emit(\"list-hide\").catch((e: Error) => showError(e));\n  }\n\n  processListMove(movement: ListMovement) {\n    if (this.active?.type !== \"list\") {\n      return;\n    }\n\n    this.emitter.emit(\"list-move\", movement).catch((e: Error) => showError(e));\n  }\n\n  processListConfirm() {\n    if (this.active?.type !== \"list\") {\n      return;\n    }\n\n    this.emitter.emit(\"list-confirm\").catch((e: Error) => showError(e));\n  }\n\n  async processHighlightsShow(subscription: (CompositeDisposable | Disposable) | null | undefined = null) {\n    if (this.active !== null) {\n      switch (this.active.type) {\n        case \"highlight\":\n          throw new Error(\"Already active\");\n\n        case \"list\":\n          this.processListHide();\n          break;\n\n        default:\n      }\n    }\n\n    const editor = atom.workspace.getActiveTextEditor();\n\n    if (editor === undefined) {\n      return;\n    }\n\n    const editorElement = atom.views.getView(editor);\n    const subscriptions = new CompositeDisposable();\n    const shouldProcess = await this.shouldHighlightsShow(editor);\n\n    if (subscription) {\n      subscriptions.add(subscription);\n    }\n\n    if (!shouldProcess) {\n      return;\n    }\n\n    this.active = {\n      type: \"highlight\",\n      subscriptions\n    };\n    subscriptions.add(() => {\n      if (this.active !== null && this.active.type === \"highlight\" && this.active.subscriptions === subscriptions) {\n        this.processHighlightsHide();\n      }\n\n      editorElement.classList.remove(\"intentions-highlights\");\n    });\n    editorElement.classList.add(\"intentions-highlights\");\n  }\n\n  processHighlightsHide() {\n    if (this.active?.type !== \"highlight\") {\n      return;\n    }\n\n    const {\n      subscriptions\n    } = this.active;\n    this.active = null;\n    subscriptions.dispose();\n    this.emitter.emit(\"highlights-hide\").catch((e: Error) => showError(e));\n  }\n\n  async shouldListShow(editor: TextEditor): Promise<boolean> {\n    const event: ShowListEvent = {\n      show: false,\n      editor\n    };\n    await this.emitter.emit(\"list-show\", event);\n    return event.show;\n  }\n\n  async shouldHighlightsShow(editor: TextEditor): Promise<boolean> {\n    const event: ShowListEvent = {\n      show: false,\n      editor\n    };\n    await this.emitter.emit(\"highlights-show\", event);\n    return event.show;\n  }\n\n  onListShow(callback: (editor: TextEditor) => Promise<boolean>) {\n    return this.emitter.on(\"list-show\", async (event: ShowListEvent) => {\n      const result = await callback(event.editor);\n      /* eslint-disable-next-line require-atomic-updates */\n\n      event.show = Boolean(result);\n    });\n  }\n\n  onListHide(callback: () => void) {\n    return this.emitter.on(\"list-hide\", callback);\n  }\n\n  onListMove(callback: (movement: ListMovement) => void) {\n    return this.emitter.on(\"list-move\", callback);\n  }\n\n  onListConfirm(callback: () => void) {\n    return this.emitter.on(\"list-confirm\", callback);\n  }\n\n  onHighlightsShow(callback: (editor: TextEditor) => Promise<boolean>) {\n    return this.emitter.on(\"highlights-show\", async (event: ShowListEvent) => {\n      const result = await callback(event.editor);\n      /* eslint-disable-next-line require-atomic-updates */\n\n      event.show = Boolean(result);\n    });\n  }\n\n  onHighlightsHide(callback: () => void) {\n    return this.emitter.on(\"highlights-hide\", callback);\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n    this.active?.subscriptions.dispose();\n  }\n\n}","import { createComponent as _$createComponent } from \"solid-js/web\";\nimport { render } from \"solid-js/web\";\nimport { CompositeDisposable } from \"sb-event-kit\";\nimport { Emitter } from \"atom\";\nimport type { Disposable, TextEditor } from \"atom\";\nimport { ListElement, Refs as ListElementRefs } from \"./elements/list\";\nimport type { ListItem, ListMovement } from \"./types\";\nexport class ListView {\n  emitter = new Emitter<{}, {\n    \"did-select\": ListItem;\n  }>(); // eslint-disable-line @typescript-eslint/ban-types\n  // root element\n\n  element: HTMLElement = document.createElement(\"div\");\n  subscriptions = new CompositeDisposable();\n  setMovement?: ListElementRefs[\"setMovement\"];\n  setConfirmed?: ListElementRefs[\"setConfirmed\"];\n\n  constructor() {\n    this.subscriptions.add(this.emitter);\n  }\n\n  activate(editor: TextEditor, suggestions: Array<ListItem>) {\n    let refs: ListElementRefs | undefined; // render the list element component\n\n    const _self$ = this;\n\n    render(() => _$createComponent(ListElement, {\n      suggestions: suggestions,\n      selectCallback: (selectedSuggestion: ListItem) => {\n        _self$.emitter.emit(\"did-select\", selectedSuggestion);\n\n        _self$.dispose();\n      },\n\n      ref(r$) {\n        const _ref$ = refs;\n        typeof _ref$ === \"function\" ? _ref$(r$) : refs = r$;\n      }\n\n    }), this.element); // store the setters\n\n    this.setMovement = refs?.setMovement;\n    this.setConfirmed = refs?.setConfirmed;\n    const bufferPosition = editor.getCursorBufferPosition();\n    const marker = editor.markBufferRange([bufferPosition, bufferPosition], {\n      invalidate: \"never\"\n    });\n    editor.decorateMarker(marker, {\n      type: \"overlay\",\n      item: this.element\n    });\n    this.subscriptions.add(function () {\n      marker.destroy();\n    });\n  }\n\n  move(movement: ListMovement) {\n    this.setMovement?.(movement);\n  }\n\n  select() {\n    // runs only once\n    this.setConfirmed?.(true);\n  }\n\n  onDidSelect(callback: (...args: Array<ListItem>) => void): Disposable {\n    return this.emitter.on(\"did-select\", callback);\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n  }\n\n}","import type { TextEditor } from \"atom\";\nimport { processListItems, getIntentionsForBufferPosition, flatObjectArray, scopesForBufferPosition } from \"./helpers\";\nimport { provider as validateProvider } from \"./validate\";\nimport type { ListProvider, ListItem } from \"./types\";\nexport class ProvidersList {\n  debounceNumber: number = 0;\n  providers = new Set<ListProvider>();\n\n  addProvider(provider: ListProvider) {\n    if (!this.hasProvider(provider)) {\n      validateProvider(provider);\n      this.providers.add(provider);\n    }\n  }\n\n  hasProvider(provider: ListProvider): boolean {\n    return this.providers.has(provider);\n  }\n\n  deleteProvider(provider: ListProvider) {\n    if (this.hasProvider(provider)) {\n      this.providers.delete(provider);\n    }\n  }\n\n  async trigger(textEditor: TextEditor): Promise<Array<ListItem>> {\n    const debounceNumber = ++this.debounceNumber;\n    const editorPath = textEditor.getPath();\n\n    if (editorPath === undefined) {\n      return [];\n    }\n\n    const bufferPosition = textEditor.getCursorBufferPosition();\n    const scopes = scopesForBufferPosition(textEditor, bufferPosition);\n    const promises: Promise<ListItem[]>[] = [];\n\n    for (const provider of this.providers) {\n      promises.push(getIntentionsForBufferPosition(provider, bufferPosition, textEditor, scopes));\n    }\n\n    const resultsArray = await Promise.all(promises);\n\n    if (debounceNumber !== this.debounceNumber) {\n      // If has been executed one more time, ignore these results\n      return [];\n    }\n\n    return processListItems(flatObjectArray<ListItem>(resultsArray));\n  }\n\n  dispose() {\n    this.providers.clear();\n  }\n\n}","import type { TextEditor, Range } from \"atom\";\nimport { flatObjectArray, getIntentionsForVisibleRange, scopesForBufferPosition } from \"./helpers\";\nimport { provider as validateProvider } from \"./validate\";\nimport type { HighlightProvider, HighlightItem } from \"./types\";\nexport class ProvidersHighlight {\n  debounceNumber: number = 0;\n  providers = new Set<HighlightProvider>();\n\n  addProvider(provider: HighlightProvider) {\n    if (!this.hasProvider(provider)) {\n      validateProvider(provider);\n      this.providers.add(provider);\n    }\n  }\n\n  hasProvider(provider: HighlightProvider): boolean {\n    return this.providers.has(provider);\n  }\n\n  deleteProvider(provider: HighlightProvider) {\n    if (this.hasProvider(provider)) {\n      this.providers.delete(provider);\n    }\n  }\n\n  async trigger(textEditor: TextEditor): Promise<Array<HighlightItem>> {\n    const debounceNumber = ++this.debounceNumber;\n    const editorPath = textEditor.getPath();\n\n    if (editorPath === undefined) {\n      return [];\n    }\n\n    const bufferPosition = textEditor.getCursorBufferPosition();\n    const scopes = scopesForBufferPosition(textEditor, bufferPosition);\n    const visibleRange = ({ ...textEditor.getBuffer().getRange()\n    } as Range); // Setting this to infinity on purpose, cause the buffer position just marks visible column\n    // according to element width\n\n    visibleRange.end.column = Infinity;\n    const promises: Promise<HighlightItem[]>[] = [];\n\n    for (const provider of this.providers) {\n      promises.push(getIntentionsForVisibleRange(provider, visibleRange, textEditor, scopes));\n    }\n\n    const resultsArray = await Promise.all(promises);\n\n    if (debounceNumber !== this.debounceNumber) {\n      // If has been executed one more time, ignore these results\n      return [];\n    }\n\n    return flatObjectArray<HighlightItem>(resultsArray);\n  }\n\n  dispose() {\n    this.providers.clear();\n  }\n\n}\nexport function paint(textEditor: TextEditor, intentions: Array<HighlightItem>): () => void {\n  const markerLayer = textEditor.addMarkerLayer();\n\n  for (const intention of intentions) {\n    const matchedText = textEditor.getTextInBufferRange(intention.range);\n    const marker = markerLayer.markBufferRange(intention.range);\n    intention.created?.({\n      textEditor,\n      marker,\n      matchedText\n    });\n  }\n\n  textEditor.decorateMarkerLayer(markerLayer, {\n    type: \"highlight\",\n    class: \"intentions-inline\"\n  });\n  return () => {\n    markerLayer.clear();\n    markerLayer.destroy();\n  };\n}","import { CompositeDisposable } from \"sb-event-kit\";\nimport { Disposable } from \"atom\";\nimport { Commands } from \"./commands\";\nimport { ListView } from \"./view-list\";\nimport { ProvidersList } from \"./providers-list\";\nimport { paint, ProvidersHighlight } from \"./providers-highlight\";\nimport type { ListProvider, HighlightProvider } from \"./types\";\nexport class Intentions {\n  active: Disposable | null | undefined = null;\n  commands = new Commands();\n  providersList = new ProvidersList();\n  providersHighlight = new ProvidersHighlight();\n  subscriptions = new CompositeDisposable();\n\n  constructor() {\n    this.subscriptions.add(this.commands, this.providersList, this.providersHighlight); // eslint-disable-next-line arrow-parens\n\n    this.commands.onListShow(async textEditor => {\n      const results = await this.providersList.trigger(textEditor);\n\n      if (!results.length) {\n        return false;\n      }\n\n      const listView = new ListView();\n      const subscriptions = new CompositeDisposable();\n      listView.activate(textEditor, results);\n      listView.onDidSelect(function (intention) {\n        intention.selected();\n        subscriptions.dispose();\n      });\n      subscriptions.add(listView, () => {\n        if (this.active === subscriptions) {\n          this.active = null;\n        }\n      }, this.commands.onListMove(function (movement) {\n        listView.move(movement);\n      }), this.commands.onListConfirm(function () {\n        listView.select();\n      }), this.commands.onListHide(function () {\n        subscriptions.dispose();\n      }));\n      this.active = subscriptions;\n      return true;\n    }); // eslint-disable-next-line arrow-parens\n\n    this.commands.onHighlightsShow(async textEditor => {\n      const results = await this.providersHighlight.trigger(textEditor);\n\n      if (!results.length) {\n        return false;\n      }\n\n      const painted = paint(textEditor, results);\n      const subscriptions = new CompositeDisposable();\n      subscriptions.add(() => {\n        if (this.active === subscriptions) {\n          this.active = null;\n        }\n      }, this.commands.onHighlightsHide(function () {\n        subscriptions.dispose();\n      }), painted);\n      this.active = subscriptions;\n      return true;\n    });\n  }\n\n  activate() {\n    this.commands.activate();\n  }\n\n  consumeListProvider(provider: ListProvider) {\n    this.providersList.addProvider(provider);\n  }\n\n  deleteListProvider(provider: ListProvider) {\n    this.providersList.deleteProvider(provider);\n  }\n\n  consumeHighlightProvider(provider: HighlightProvider) {\n    this.providersHighlight.addProvider(provider);\n  }\n\n  deleteHighlightProvider(provider: HighlightProvider) {\n    this.providersHighlight.deleteProvider(provider);\n  }\n\n  dispose() {\n    this.subscriptions.dispose();\n\n    if (this.active) {\n      this.active.dispose();\n    }\n  }\n\n}"],"names":["$22a12fcd7226b05ff3a9bbb6d033bddc$var$_classCallCheck","instance","Constructor","TypeError","$b4b20bad197fbd35d5b09d60f983d6c0$var$_interopRequireDefault","obj","__esModule","default","provider","entry","message","Array","isArray","grammarScopes","getIntentions","undefined","console","log","Error","scopesForBufferPosition","textEditor","bufferPosition","scopeDescriptorForBufferPosition","getScopesArray","getIntentionsForBufferPosition","scopes","hasOverlap","getIntentionsForVisibleRange","visibleRange","showError","detail","detailShown","messageShown","stack","atom","notifications","addError","dismissable","flatObjectArray","resultsArray","flat","filter","result","arr1","arr2","some","elm","includes","$d6b0f5eb93d223f7f343a23723f1a956$var$setHydrateContext","context","$d6b0f5eb93d223f7f343a23723f1a956$export$f07a6cef19e11b4c","$d6b0f5eb93d223f7f343a23723f1a956$export$ac5ee418fd4e0f60","fn","detachedOwner","$d6b0f5eb93d223f7f343a23723f1a956$var$Owner","listener","$d6b0f5eb93d223f7f343a23723f1a956$var$Listener","owner","root","length","$d6b0f5eb93d223f7f343a23723f1a956$var$UNOWNED","owned","cleanups","attached","$d6b0f5eb93d223f7f343a23723f1a956$var$runUpdates","$d6b0f5eb93d223f7f343a23723f1a956$var$cleanNode","$d6b0f5eb93d223f7f343a23723f1a956$export$248155459a28d1fc","value","areEqual","options","s","observers","observerSlots","pending","$d6b0f5eb93d223f7f343a23723f1a956$var$NOTPENDING","comparator","$d6b0f5eb93d223f7f343a23723f1a956$export$5ca47aaad2fbf622","$d6b0f5eb93d223f7f343a23723f1a956$var$readSignal","bind","$d6b0f5eb93d223f7f343a23723f1a956$var$writeSignal","$d6b0f5eb93d223f7f343a23723f1a956$export$9ddb7fb291b7e0c8","$d6b0f5eb93d223f7f343a23723f1a956$var$updateComputation","$d6b0f5eb93d223f7f343a23723f1a956$var$createComputation","$d6b0f5eb93d223f7f343a23723f1a956$export$494c6b131fbef4be","$d6b0f5eb93d223f7f343a23723f1a956$export$59ca756e7a8aea0e","c","state","$d6b0f5eb93d223f7f343a23723f1a956$export$410f60d5e45e709","$d6b0f5eb93d223f7f343a23723f1a956$var$Pending","q","i","data","call","$d6b0f5eb93d223f7f343a23723f1a956$export$e047e338db8faf8c","$d6b0f5eb93d223f7f343a23723f1a956$export$b4cd8de5710bc55c","args","pop","deps","prev","prevResult","push","$d6b0f5eb93d223f7f343a23723f1a956$export$8de110a73dc5605f","this","sources","updates","$d6b0f5eb93d223f7f343a23723f1a956$var$Updates","$d6b0f5eb93d223f7f343a23723f1a956$var$lookDownstream","sSlot","sourceSlots","$d6b0f5eb93d223f7f343a23723f1a956$var$Transition","running","has","tValue","isComp","add","o","disposed","$d6b0f5eb93d223f7f343a23723f1a956$var$markUpstream","pure","$d6b0f5eb93d223f7f343a23723f1a956$var$Effects","node","time","$d6b0f5eb93d223f7f343a23723f1a956$var$ExecCount","$d6b0f5eb93d223f7f343a23723f1a956$var$runComputation","nextValue","err","$d6b0f5eb93d223f7f343a23723f1a956$var$handleError","updatedAt","init","tOwned","$d6b0f5eb93d223f7f343a23723f1a956$var$runTop","top","suspense","inFallback","effects","runningTransition","wait","$d6b0f5eb93d223f7f343a23723f1a956$var$runQueue","cbs","promises","size","apply","$d6b0f5eb93d223f7f343a23723f1a956$var$setTransPending","cb","forEach","v","len","$d6b0f5eb93d223f7f343a23723f1a956$var$runEffects","$d6b0f5eb93d223f7f343a23723f1a956$var$completeUpdates","queue","source","index","obs","n","$d6b0f5eb93d223f7f343a23723f1a956$var$reset","fns","$d6b0f5eb93d223f7f343a23723f1a956$var$ERROR","$d6b0f5eb93d223f7f343a23723f1a956$var$lookup","f","key","$d6b0f5eb93d223f7f343a23723f1a956$export$ff2d44480da105c7","Comp","props","id","count","r","$d6b0f5eb93d223f7f343a23723f1a956$export$f5235b51f4f3e06","list","mapFn","items","mapped","disposers","indexes","ctx","mapper","disposer","j","set","newItems","newIndices","newIndicesNext","temp","tempdisposers","tempIndexes","start","end","newEnd","item","newLen","fallback","$d6b0f5eb93d223f7f343a23723f1a956$var$FALLBACK","Math","min","Map","get","slice","$d6b0f5eb93d223f7f343a23723f1a956$export$eaeb808a925192ab","each","children","[object Object]","$51a259062f42bb3fa91df1d342ee4798$var$reconcileArrays","parentNode","a","b","bLength","aEnd","bEnd","aStart","bStart","after","nextSibling","map","insertBefore","removeChild","t","sequence","replaceChild","$51a259062f42bb3fa91df1d342ee4798$export$c32ae21812be6bdb","html","check","isSVG","document","createElement","innerHTML","split","content","firstChild","$51a259062f42bb3fa91df1d342ee4798$export$ad79fd18084743b4","parent","accessor","marker","initial","$51a259062f42bb3fa91df1d342ee4798$var$insertExpression","current","$51a259062f42bb3fa91df1d342ee4798$var$eventHandler","e","type","composedPath","target","Object","defineProperty","configurable","handler","cancelBubble","host","Node","unwrapArray","multi","nodeType","createTextNode","$51a259062f42bb3fa91df1d342ee4798$var$cleanChildren","textContent","array","$51a259062f42bb3fa91df1d342ee4798$var$normalizeIncomingArray","$51a259062f42bb3fa91df1d342ee4798$var$appendNodes","appendChild","warn","normalized","unwrap","dynamic","replacement","inserted","el","isParent","ListElement","handleSelection","suggestion","selectCallback","setActiveIndex","getActiveIndex","createSignal","isSelected","subs","p","keys","l","values","Set","delete","createSelector","getMovement","setMovement","getConfirmed","setConfirmed","ref","createComputed","on","suggestions","suggestionsCount","prevIndex","movement","className","_el$","$e808a02ea7758cb9a8a351cf38520238$var$_tmpl$","cloneNode","_el$2","getIndex","_el$3","$e808a02ea7758cb9a8a351cf38520238$var$_tmpl$2","_el$4","$$click","title","_p$","_v$","_v$2","activate","intentions","Intentions","deactivate","dispose","consumeListIntentions","providers","consumeListProvider","Disposable","deleteListProvider","consumeHighlightIntentions","consumeHighlightProvider","deleteHighlightProvider","$b4b20bad197fbd35d5b09d60f983d6c0$exports","CompositeDisposable","Emitter","$3a25b7b2fd692b2fd449c5b3cb3d6cf8$exports","$3a25b7b2fd692b2fd449c5b3cb3d6cf8$var$_createClass","defineProperties","descriptor","enumerable","writable","protoProps","staticProps","prototype","$fcb05c88facdb4433e4db0504bae956e$exports","$fcb05c88facdb4433e4db0504bae956e$var$_createClass","$fcb05c88facdb4433e4db0504bae956e$var$_assert2","$3zpJ8$assert","$fcb05c88facdb4433e4db0504bae956e$var$Disposable","callback","$fcb05c88facdb4433e4db0504bae956e$var$_classCallCheck","$3a25b7b2fd692b2fd449c5b3cb3d6cf8$var$_disposable2","$3a25b7b2fd692b2fd449c5b3cb3d6cf8$var$Emitter","$3a25b7b2fd692b2fd449c5b3cb3d6cf8$var$_classCallCheck","handlers","eventName","_this","callbacks","off","indexOf","splice","Promise","resolve","_len","arguments","params","_key","all","clear","$b4b20bad197fbd35d5b09d60f983d6c0$var$_emitter2","$b4b20bad197fbd35d5b09d60f983d6c0$var$_disposable2","$22a12fcd7226b05ff3a9bbb6d033bddc$exports","$22a12fcd7226b05ff3a9bbb6d033bddc$var$_createClass","$78df6c514a082949f655a07194b59ceb$exports","validate","param","$22a12fcd7226b05ff3a9bbb6d033bddc$var$CompositeDisposable","disposables","_len2","_key2","_len3","_key3","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","$b4b20bad197fbd35d5b09d60f983d6c0$var$_compositeDisposable2","$a5f129ea025a694b97f640cb88d19e62$exports","addListener","addEventListener","$3zpJ8$Disposable1","removeListener","removeEventListener","CORE_COMMANDS","Commands","active","emitter","subscriptions","commands","async","processListShowP","processListShow","originalEvent","setImmediate","matched","keymaps","onDidMatchBinding","binding","command","disposableEvent","body","processListHide","ref5","abortKeyBinding","processHighlightsShowP","processHighlightsShow","code","upE","processHighlightsHide","stoppingEvent","processListConfirm","processListMove","event","stopImmediatePropagation","subscription","editor","workspace","getActiveTextEditor","editorElement","views","getView","shouldListShow","classList","remove","setTimeout","ref7","emit","catch","ref8","ref9","shouldProcess","shouldHighlightsShow","ref10","show","onListShow","onListHide","onListMove","onListConfirm","onHighlightsShow","onHighlightsHide","ref11","$d6b0f5eb93d223f7f343a23723f1a956$var$transPending","defaultValue","$d6b0f5eb93d223f7f343a23723f1a956$export$a4ff86cea5c8127e","$51a259062f42bb3fa91df1d342ee4798$var$$$EVENTS","eventNames","name","ListView","element","refs","_self$","$e808a02ea7758cb9a8a351cf38520238$export$15f72cbf38fcad4a","selectedSuggestion","r$","render","getCursorBufferPosition","markBufferRange","invalidate","decorateMarker","destroy","move","_obj","select","onDidSelect","ProvidersList","addProvider","hasProvider","validateProvider","deleteProvider","debounceNumber","getPath","class","trim","icon","join","sort","priority","processListItems","ProvidersHighlight","getBuffer","getRange","column","Infinity","providersList","providersHighlight","results","trigger","listView","intention","selected","painted","markerLayer","addMarkerLayer","matchedText","getTextInBufferRange","range","created","decorateMarkerLayer","paint"],"version":3,"file":"index.js.map"}